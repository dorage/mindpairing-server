# Generated by Django 4.2.3 on 2023-07-23 13:19

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField()),
                ('category', models.CharField(max_length=20)),
                ('hidden', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'board category',
                'db_table': 'board',
                'ordering': ('index',),
            },
        ),
        migrations.CreateModel(
            name='BoardHashtagAssoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField()),
                ('hidden', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'board subTopic',
                'db_table': 'board_hashtag_assoc',
                'ordering': ('index',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(validators=[django.core.validators.MaxLengthValidator(200)])),
                ('like', models.PositiveIntegerField(default=0)),
                ('report', models.PositiveIntegerField(default=0)),
                ('hidden', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('delete_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='LikeCommentAssoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'like comment',
                'db_table': 'like_comment_assoc',
            },
        ),
        migrations.CreateModel(
            name='LikePostAssoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'like post',
                'db_table': 'like_post_assoc',
            },
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_at', models.DateTimeField(auto_now_add=True)),
                ('end_at', models.DateTimeField()),
                ('memo', models.TextField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'penalty',
                'ordering': ('-update_at', '-create_at'),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mbti', models.CharField(max_length=4, validators=[django.core.validators.RegexValidator(message='Not match MBTI characters', regex='[IEX][SNX][TFX][PJX]')], verbose_name='written by')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(5)])),
                ('view', models.PositiveIntegerField(default=0)),
                ('like', models.PositiveIntegerField(default=0)),
                ('report', models.PositiveIntegerField(default=0)),
                ('hidden', models.BooleanField(default=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('delete_at', models.DateTimeField(blank=True, null=True)),
                ('reserve_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'post',
                'ordering': ('-create_at',),
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Applied'), (1, 'Accepted'), (2, 'Rejected')], default=0)),
                ('target_number', models.IntegerField()),
                ('target_type', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message="MUST BE 'comment' or 'post'", regex='(comment|post)')])),
                ('content', models.TextField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'report',
                'ordering': ('-create_at',),
            },
        ),
        migrations.CreateModel(
            name='ReportReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveSmallIntegerField()),
                ('reason', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'report_reason',
                'ordering': ('index',),
            },
        ),
    ]
